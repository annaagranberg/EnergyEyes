const numOccupants = 3;
const homeSize = 80; // in square meters

// Define a function to generate synthetic energy consumption data for a week
export default function generateEnergyData(numWeeks, numOccupants, homeSize) {
  let data = [];

  for (let week = 0; week < numWeeks; week++) {
    const startDate = new Date(2023, 0, 6); // start date, 0 Ã¤r januari osv.
    const endDate = new Date(); // end date maybe should be function whats todays date

    for (let date = new Date(startDate); date <= endDate; date.setHours(date.getHours() + 1)) {
      // Calculate energy usage based on the current date and time
      const hour = date.getHours();
      const dayOfWeek = date.toLocaleString('en-US', { weekday: 'long' });
      let baseUsage = 0;

      // Determine the base energy usage based on the number of occupants and home size
      if (homeSize <= 50) {
        baseUsage = numOccupants * 0.3;
      } else if (homeSize > 50 && homeSize <= 100) {
        baseUsage = numOccupants * 0.4;
      } else if (homeSize > 100) {
        baseUsage = numOccupants * 0.5;
      }

      let usage = 0;

      // During off-peak hours, usage is lower
      if (hour >= 0 && hour < 8) {
        usage = baseUsage * getRandomInRange(0.1, 0.2); // kWh
      }
      // During the morning, energy usage is moderate
      else if (hour >= 8 && hour < 15) {
        usage = baseUsage * getRandomInRange(0.2, 0.3); // kWh
      }
      //
      else if (hour >= 15 && hour < 18) {
        usage = baseUsage * getRandomInRange(0.3, 0.4); // kWh
      }
      // During the afternoon and evening, energy usage is higher
      else if (hour >= 18 && hour < 23) {
        usage = baseUsage * getRandomInRange(0.4, 0.5); // kWh
        // If it's a weekday, usage is higher during cooking hours
        if (dayOfWeek !== 'Saturday' && dayOfWeek !== 'Sunday' && (hour >= 10 && hour < 22)) {
          usage += getRandomInRange(0.4, 0.5); // kWh
        }
      }
      // During late night hours, usage is moderate again
      else {
        usage = baseUsage * getRandomInRange(0.2, 0.3); // kWh
      }

      // Add some random variation to the usage
      const variation = getRandomInRange(-3, 3); // kWh
      const totalUsage = Math.max(usage + variation, 0);

      // Add the usage data to the array
      data.push({
        date: date.toLocaleString(),
        usage: totalUsage
      });
    }
  }

  return data;
}

// Generate one week of synthetic energy data based on the number of occupants and home size
const energyData = generateEnergyData(1, numOccupants, homeSize)
